https://cygwin.com/install.html
https://nodejs.org/es/
https://github.com/angular/quickstart
cambiamos el nombre de la carpeta extraida
vamos a cd "ubicacion de carpeta"
tiramos npm install
////-no me funcionaron xd
en caso de error
npm install -g npm
npm cache clean
npm update
npm install
////
-no sirve (v2)
npm install @angular/{common,compiler,compiler-cli,core,forms,http,platform-browser,platform-browser-dynamic,platform-server,router,animations}@next --save

TRUE SUCCES
npm install -g @angular/cli@latest

ver captura N02
https://angular.io/guide/architecture

---------------
https://github.com/angular/angular-cli
ng new proyecto-angular2
------------------------------

https://victorroblesweb.es/2017/03/28/instalar-angular-4-paso-paso/
https://victorroblesweb.es/2016/12/10/usar-angular-cli-angular-2/
https://github.com/angular/angular-cli



Elementos que conforman Angular
Sección 2, clase 13
COMPONENTES

Un componente al final va a controlar un trozo de pantalla o de la vista. 

Todo lo que se puede ver en pantalla es controlado y gestionado por este tipo de elementos.

La lógica de un componente dentro una clase en Angular 2 es que da soporte a una 
vista interactuando con ella a través de un API con propiedades y métodos.

El componente hace de mediador entre la vista a través de la plantilla y 
la lógica de la app donde se incluirá el modelo de datos, es decir una especie de controlador.



PLANTILLAS

Las plantillas van a definir la vista de los componentes. 

Son htmls y tienen sintaxis especial de Angular. Trabajando con el databinding y las directivas.



DECORADORES Y METADATOS

Con los decoradores(patrón de diseño) vamos a configurar dinamicamente atributos/metadatos de las clases y componentes.

Los metadatos van a describir a las clases pero también describen relaciones, por ejemplo si tenemos un componente y una plantilla el metadato se va a encargar de decirle a Angular que ese componente y esa plantilla van juntos, entre otras muchas cosas.



SERVICIOS
Son clases con un objetivo claro, facilita la reutilización, son un tipo de componente dentro de la arquitectura de Angular 2 y mediante la inyección de dependencias los podemos usar en otros componentes principales digamos.



PROVIDERS

Son servicios que nos proveen de datos o funcionalidades mediante sus métodos. Existen providers/servicios
propios de Angular o creados por nosotros mismos.



DIRECTIVAS
Son funcionalidades aplicables al DOM y a los elementos HTML en las plantillas de un componente. Por ejemplo una directiva puede servir para controlar que un div se muestre o no o recorrer un array en la vista (directivas estructurales, estructuras condicionales y de control) o incluso también puede servir para darle una un estilo u otro a un elemento del HTML o también para interactuar con el modelo de datos del componente. 

Básicamente son nuevos atributos para aplicarle a cualquier cosa en nuestra plantilla/vista.

Tienes más información sobre la arquitectura de Angular 4 en la documentación ofical:https://angular.io/docs/ts/latest/guide/architecture.html